paths:
  /api/v1/users/{id}:
    patch:
      security:
        - Bearer: []
      tags:
        - Users
      summary: Update existing user 
      produces: 
        - application/json
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          schema:
            type: string
            minimum: 1
          description: The user ID
      requestBody:
        content:
          application/json:
            name: patch user 
            description: Update am user with a patch request to /users
            required: true 
            schema: 
              $ref: '#/definitions/patchUser'
          multipart/form-data:
            name: patch user
            description: Update am user with a patch request to /users
            required: true 
            schema: 
              $ref: '#/definitions/patchUserMult'
      responses:
        201:
          description: The updated user object
        404:
          description: User not found
        409:
          description: Conflict, user email already exists

definitions:
  patchUser:
    type: object
    properties:
      firstName: 
        type: string
      lastName:
        type: string
      gender:
        type: string
        enum: ["male","female"]
      email: 
        type: string
      permissionLevel:
        type: string
        enum: ["Admin","User"]
      phone: 
        type: string
      username: 
        type: string
      password:
        type: string
      birthDate: 
        type: string
      avatar: 
        type: string
      status:
        type: string
        enum: ["active","closed"]

  patchUserMult:
    type: object
    properties:
      firstName: 
        type: string
      lastName:
        type: string
      gender:
        type: string
        enum: ["male","female"]
      email: 
        type: string
      permissionLevel:
        type: string
        enum: ["Admin","User"]
      phone: 
        type: string
      username: 
        type: string
      password:
        type: string
      birthDate: 
        type: string
      avatar: 
        type: string
        format: binary
      status:
        type: string
        enum: ["active","closed"]